!pip install numpy pandas scikit-learn

import numpy as np
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

import random

# Define 30 fun questions with their MBTI trait
questions = [
    ("After a long week, are you more like 'party all night 🎉' or 'blanket + Netflix 🛋️'?", "E", "I"),
    ("If you had to spend a whole day without talking to anyone, would that be heaven 😇 or torture 😱?", "I", "E"),
    ("Do you usually feel like the loudest one in the group chat 📣 or the silent reader 👀?", "E", "I"),
    ("When you meet strangers, are you excited ('new friends!') or awkward ('uhh… help')?", "E", "I"),
    ("Do you recharge more from hanging out with people or chilling alone?", "E", "I"),

    ("Are you the type who reads instructions carefully 📝, or just presses buttons and figures it out later?", "S", "N"),
    ("If I ask about your dream life, do you give a step-by-step plan 📅 or a wild fantasy 🛸?", "S", "N"),
    ("Do you notice little details (like someone’s haircut) ✂️ or the *big picture* vibes 🌌?", "S", "N"),
    ("Do you prefer 'real life hacks' 🛠️ or 'what if we lived on Mars' talks 🚀?", "S", "N"),
    ("Do you trust what you can see 👀 or your gut feelings ✨?", "S", "N"),

    ("Your friend bought an ugly outfit 😬… do you tell the truth or protect their feelings?", "T", "F"),
    ("Do you debate to win 🔥 or to keep the peace ☮️?", "T", "F"),
    ("When watching movies, do you analyze logic holes 🕵️‍♂️ or cry at the sad parts 😭?", "T", "F"),
    ("Do you decide more with your head 🧠 or with your heart ❤️?", "T", "F"),
    ("If your friend is sad, do you try to fix it 🔧 or just give hugs 🤗?", "T", "F"),

    ("If a plan changes last-minute, are you chill 😌 or stressed 😱?", "P", "J"),
    ("Are you the one making to-do lists ✅ or going with the flow 🌸?", "J", "P"),
    ("Suitcase packing: a week before ✈️ or 5 minutes before leaving 🏃?", "J", "P"),
    ("Do you feel better when everything is decided 🔒 or open-ended 🔓?", "J", "P"),
    ("Is your desktop neat 🖥️ or a chaotic jungle 🌴?", "J", "P"),

    ("Morning routine: coffee first ☕ or phone scroll first 📱?", "J", "P"),
    ("Cooking style: follow the recipe 📖 or wing it 🎨?", "S", "N"),
    ("Series watching: binge in one night 🍿 or one per week ⏰?", "P", "J"),
    ("Do you show up 10 min early ⏳ or 10 min late ⌛?", "J", "P"),
    ("On a group project, are you the leader 👑 or silent helper 🛠️?", "E", "I"),
    ("If WiFi dies for a day, are you chill 😌 or panicking 🚨?", "I", "E"),
    ("Do you think before you speak 🤔 or speak then think 😅?", "I", "E"),
    ("Do you clean your room when slightly messy 🧹 or when you can’t see the floor 🐉?", "J", "P"),
    ("In convos, are you more facts and data 📊 or vibes and feelings ✨?", "T", "F"),
    ("Vacations: planned by the hour ⏱️ or spontaneous adventure 🎒?", "J", "P"),
]

# Keep track of scores
scores = {"I":0, "E":0, "S":0, "N":0, "T":0, "F":0, "J":0, "P":0}

print("🤖 Hey there! Let’s play a game — I’ll ask you fun questions and guess your MBTI type!\n")
random.shuffle(questions)

# Ask 10 random questions (you can change to 30 if you want full test)
for q, first_trait, second_trait in questions[:25]:
    answer = input(q + " (type the first option or second option): ").strip().lower()
    if answer.startswith("first") or answer in ["yes", first_trait.lower()]:
        scores[first_trait] += 1
    else:
        scores[second_trait] += 1

# Determine MBTI type
mbti = ""
mbti += "I" if scores["I"] >= scores["E"] else "E"
mbti += "S" if scores["S"] >= scores["N"] else "N"
mbti += "T" if scores["T"] >= scores["F"] else "F"
mbti += "J" if scores["J"] >= scores["P"] else "P"

print("\n✨ Done! Based on your answers, I think you’re:", mbti)
